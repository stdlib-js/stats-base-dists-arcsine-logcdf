{"version":3,"file":"index.mjs","sources":["../lib/logcdf.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar asin = require( '@stdlib/math-base-special-asin' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LN_PI = require( '@stdlib/constants-float64-ln-pi' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar LN2 = require( '@stdlib/constants-float64-ln-two' );\n\n\n// MAIN //\n\n/**\n* Evaluates the logarithm of the cumulative distribution function (CDF) for an arcsine distribution with minimum support `a` and maximum support `b` at a value `x`.\n*\n* @param {number} x - input value\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {number} evaluated logCDF\n*\n* @example\n* var y = logcdf( 9.0, 0.0, 10.0 );\n* // returns ~-0.23\n*\n* @example\n* var y = logcdf( 0.5, 0.0, 2.0 );\n* // returns ~-1.1\n*\n* @example\n* var y = logcdf( +Infinity, 2.0, 4.0 );\n* // returns 0.0\n*\n* @example\n* var y = logcdf( -Infinity, 2.0, 4.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logcdf( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = logcdf( 2.0, 1.0, 0.0 );\n* // returns NaN\n*/\nfunction logcdf( x, a, b ) {\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x < a ) {\n\t\treturn NINF;\n\t}\n\tif ( x >= b ) {\n\t\treturn 0.0;\n\t}\n\treturn LN2 - LN_PI + ln( asin( sqrt( ( x-a ) / ( b-a ) ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = logcdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar asin = require( '@stdlib/math-base-special-asin' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LN_PI = require( '@stdlib/constants-float64-ln-pi' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar LN2 = require( '@stdlib/constants-float64-ln-two' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the logarithm of the cumulative distribution function (CDF) for an arcsine distribution with minimum support `a` and maximum support `b`.\n*\n* @param {number} a - minimum support\n* @param {number} b - maximum support\n* @returns {Function} logCDF\n*\n* @example\n* var logcdf = factory( 0.0, 10.0 );\n* var y = logcdf( 0.5 );\n* // returns ~-1.941\n*\n* y = logcdf( 8.0 );\n* // returns ~-0.35\n*/\nfunction factory( a, b ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\ta >= b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn logcdf;\n\n\t/**\n\t* Evaluates the logarithm of the cumulative distribution function (CDF) for an arcsine distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated logCDF\n\t*\n\t* @example\n\t* var y = logcdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction logcdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < a ) {\n\t\t\treturn NINF;\n\t\t}\n\t\tif ( x >= b ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn LN2 - LN_PI + ln( asin( sqrt( ( x-a ) / ( b-a ) ) ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Arcsine distribution logarithm of cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-arcsine-logcdf\n*\n* @example\n* var logcdf = require( '@stdlib/stats-base-dists-arcsine-logcdf' );\n*\n* var y = logcdf( 5.0, 0.0, 4.0 );\n* // returns 0.0\n*\n* var mylogcdf = logcdf.factory( 0.0, 10.0 );\n* y = mylogcdf( 0.5 );\n* // returns ~-1.938\n*\n* y = mylogcdf( 8.0 );\n* // returns ~-0.35\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar logcdf = require( './logcdf.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( logcdf, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = logcdf;\n"],"names":["isnan","require$$0","asin","require$$1","sqrt","require$$2","ln","require$$3","LN_PI","require$$4","NINF","require$$5","LN2","require$$6","constantFunction","require$$7","logcdf","x","a","b","NaN","factory","lib"],"mappings":";;o0BAsBA,IAAIA,EAAQC,EACRC,EAAOC,EACPC,EAAOC,EACPC,EAAKC,EACLC,EAAQC,EACRC,EAAOC,EACPC,EAAMC,EAkEV,ICxEIC,EAAmBb,EACnBD,EAAQG,EACRD,EAAOG,EACPD,EAAOG,EACPD,EAAKG,EACLD,EAAQG,EACRD,EAAOG,EACPD,EAAMG,EA0DV,IC7CAC,EF+BA,SAAiBC,EAAGC,EAAGC,GACtB,OACCnB,EAAOiB,IACPjB,EAAOkB,IACPlB,EAAOmB,IACPD,GAAKC,EAEEC,IAEHH,EAAIC,EACDR,EAEHO,GAAKE,EACF,EAEDP,EAAMJ,EAAQF,EAAIJ,EAAME,GAAQa,EAAEC,IAAQC,EAAED,OE7CpDG,EDMA,SAAkBH,EAAGC,GACpB,OACCnB,EAAOkB,IACPlB,EAAOmB,IACPD,GAAKC,EAEEL,EAAkBM,KAe1B,SAAiBH,GAChB,GAAKjB,EAAOiB,GACX,OAAOG,IAER,GAAKH,EAAIC,EACR,OAAOR,EAER,GAAKO,GAAKE,EACT,OAAO,EAER,OAAOP,EAAMJ,EAAQF,EAAIJ,EAAME,GAAQa,EAAEC,IAAQC,EAAED,QCvCrDjB,EAOAe,EAAA,UAAAK,GAKA,IAAAC,EAAAN"}